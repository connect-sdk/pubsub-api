// Code generated by protoc-gen-go-resource. DO NOT EDIT.
package pubsubv1

import (
	"fmt"
	"strings"
)

type ParsedProjectName struct {
	ProjectID string
}

func ParseProjectName(s string) (ParsedProjectName, error) {
	p := strings.Split(s, "/")
	if len(p) != 2 {
		return ParsedProjectName{}, fmt.Errorf("parse %q: bad number of segments, want: 2, got: %d", s, len(p))
	}

	var out ParsedProjectName

	if p[0] != "projects" {
		return ParsedProjectName{}, fmt.Errorf("parse %q: bad segment 0, want: %q, got: %q", s, "projects", p[0])
	}

	out.ProjectID = p[1]

	return out, nil
}

func ParseFullProjectName(s string) (ParsedProjectName, error) {
	if !strings.HasPrefix(s, "//pubsub.googleapis.com/") {
		return ParsedProjectName{}, fmt.Errorf("parse %q: invalid prefix, want: %q", s, "//pubsub.googleapis.com/")
	}

	return ParseProjectName(strings.TrimPrefix(s, "//pubsub.googleapis.com/"))
}

func (n ParsedProjectName) Name() string {
	var out string

	out += "projects"

	out += "/"

	out += n.ProjectID

	return out
}

func (n ParsedProjectName) FullName() string {
	return "//pubsub.googleapis.com/" + n.Name()
}

type ParsedTopicName struct {
	ProjectID string

	TopicID string
}

func ParseTopicName(s string) (ParsedTopicName, error) {
	p := strings.Split(s, "/")
	if len(p) != 4 {
		return ParsedTopicName{}, fmt.Errorf("parse %q: bad number of segments, want: 4, got: %d", s, len(p))
	}

	var out ParsedTopicName

	if p[0] != "projects" {
		return ParsedTopicName{}, fmt.Errorf("parse %q: bad segment 0, want: %q, got: %q", s, "projects", p[0])
	}

	out.ProjectID = p[1]

	if p[2] != "topics" {
		return ParsedTopicName{}, fmt.Errorf("parse %q: bad segment 2, want: %q, got: %q", s, "topics", p[2])
	}

	out.TopicID = p[3]

	return out, nil
}

func ParseFullTopicName(s string) (ParsedTopicName, error) {
	if !strings.HasPrefix(s, "//pubsub.googleapis.com/") {
		return ParsedTopicName{}, fmt.Errorf("parse %q: invalid prefix, want: %q", s, "//pubsub.googleapis.com/")
	}

	return ParseTopicName(strings.TrimPrefix(s, "//pubsub.googleapis.com/"))
}

func (n ParsedTopicName) Name() string {
	var out string

	out += "projects"

	out += "/"

	out += n.ProjectID

	out += "/"

	out += "topics"

	out += "/"

	out += n.TopicID

	return out
}

func (n ParsedTopicName) FullName() string {
	return "//pubsub.googleapis.com/" + n.Name()
}
